AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  Stage:
    Type: String
    AllowedValues:
    - dev
    - uat
    - prod
    Default: dev
    Description: Suffix to add to the Bucket Prefixes. Can correspond dev, stage,
      or prod.
  ProjectName:
    Type: String
    Default: fire-incidents
    Description: Project name for tagging resources
  WheelName:
    Type: String
    Default: fire_incidents
    Description: Project name for tagging resources
  Version:
    Type: String
    Default: '1'
    Description: Version number to separate paths in S3
  RawDatabase:
    Type: String
    Default: incidents_raw
    Description: Database for raw data
  RefinedDatabase:
    Type: String
    Default: incidents_refined
    Description: Database for refined data
  BucketNameConfig:
    Type: String
    Default: fire-incidents-config-dev
    Description: S3 bucket config
  BucketNameRaw:
    Type: String
    Default: fire-incidents-raw-dev
    Description: S3 bucket raw
  BucketNameRefined:
    Type: String
    Default: fire-incidents-refined-dev
    Description: S3 bucket refined
Description: 'fire-incidents Demo

  '
Globals:
  Function:
    Runtime: python3.7
    MemorySize: 4096
    Timeout: 900
Resources:
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${ProjectName}-role-${Stage}
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - glue.amazonaws.com
            - lambda.amazonaws.com
            - redshift.amazonaws.com
            - athena.amazonaws.com
            - Fn::Sub: states.${AWS::Region}.amazonaws.com
          Action:
          - sts:AssumeRole
      Tags:
      - Key: project
        Value:
          Ref: ProjectName
      - Key: version
        Value:
          Ref: Version
      - Key: stage
        Value:
          Ref: Stage
  PipelineAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
      - Ref: PipelineRole
      PolicyName:
        Fn::Sub: ${ProjectName}-policy-${Stage}
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: s3:*
          Resource:
          - Fn::Sub: arn:aws:s3:::${BucketNameConfig}
          - Fn::Sub: arn:aws:s3:::${BucketNameConfig}/*
          - Fn::Sub: arn:aws:s3:::${BucketNameRaw}
          - Fn::Sub: arn:aws:s3:::${BucketNameRaw}/*
          - Fn::Sub: arn:aws:s3:::${BucketNameRefined}
          - Fn::Sub: arn:aws:s3:::${BucketNameRefined}/*
        - Effect: Allow
          Action:
          - lambda:InvokeFunction
          - logs:*
          - glue:StartJobRun
          - glue:GetJobRun
          - glue:GetJobRuns
          - glue:BatchStopJobRun
          - states:StartExecution
          - athena:getQueryResults
          - athena:startQueryExecution
          - athena:getQueryExecution
          Resource: '*'
  PipelineRawRefined:
    Type: AWS::Glue::Job
    Properties:
      Connections:
        Connections:
        - redshift-connection
      Name:
        Fn::Sub: ${ProjectName}-raw-refined-${Stage}
      ExecutionProperty:
        MaxConcurrentRuns: 3
      WorkerType: G.1X
      NumberOfWorkers: 3
      GlueVersion: '3.0'
      Timeout: 2880
      Command:
        Name: glueetl
        PythonVersion: '3'
        ScriptLocation: ../../src/raw_refined.py
      DefaultArguments:
        --extra-py-files:
          Fn::Sub: s3://${BucketNameConfig}/lib/${WheelName}-1.0-py3-none-any.whl
        --enable-metrics: ''
        --enable-spark-ui: 'true'
        --spark-event-logs-path:
          Fn::Sub: s3://${BucketNameConfig}/logs/spark
        --enable-s3-parquet-optimized-committer: 'true'
        --user-jars-first: 'true'
        --enable-glue-datacatalog: ''
      Description: Template Spark job
      Role:
        Fn::GetAtt:
        - PipelineRole
        - Arn
      Tags:
        version:
          Ref: Version
        stage:
          Ref: Stage
        project:
          Ref: ProjectName
  PipelineRefinedStg:
    Type: AWS::Glue::Job
    Properties:
      Connections:
        Connections:
        - redshift-connection
      Name:
        Fn::Sub: ${ProjectName}-refined-stg-${Stage}
      ExecutionProperty:
        MaxConcurrentRuns: 3
      WorkerType: G.1X
      NumberOfWorkers: 3
      GlueVersion: '3.0'
      Timeout: 2880
      Command:
        Name: glueetl
        PythonVersion: '3'
        ScriptLocation: ../../src/refined_stg.py
      DefaultArguments:
        --extra-py-files:
          Fn::Sub: s3://${BucketNameConfig}/lib/${WheelName}-1.0-py3-none-any.whl
        --enable-metrics: ''
        --enable-spark-ui: 'true'
        --spark-event-logs-path:
          Fn::Sub: s3://${BucketNameConfig}/logs/spark
        --enable-s3-parquet-optimized-committer: 'true'
        --user-jars-first: 'true'
        --enable-glue-datacatalog: ''
      Description: Template Spark job
      Role:
        Fn::GetAtt:
        - PipelineRole
        - Arn
      Tags:
        version:
          Ref: Version
        stage:
          Ref: Stage
        project:
          Ref: ProjectName
  PipelineStgDwh:
    Type: AWS::Glue::Job
    Properties:
      Connections:
        Connections:
        - redshift-connection
      Name:
        Fn::Sub: ${ProjectName}-stg-dwh-${Stage}
      ExecutionProperty:
        MaxConcurrentRuns: 3
      WorkerType: G.1X
      NumberOfWorkers: 3
      GlueVersion: '3.0'
      Timeout: 2880
      Command:
        Name: glueetl
        PythonVersion: '3'
        ScriptLocation: ../../src/stg_dwh.py
      DefaultArguments:
        --extra-py-files:
          Fn::Sub: s3://${BucketNameConfig}/lib/${WheelName}-1.0-py3-none-any.whl
        --enable-metrics: ''
        --enable-spark-ui: 'true'
        --spark-event-logs-path:
          Fn::Sub: s3://${BucketNameConfig}/logs/spark
        --enable-s3-parquet-optimized-committer: 'true'
        --user-jars-first: 'true'
        --enable-glue-datacatalog: ''
      Description: Template Spark job
      Role:
        Fn::GetAtt:
        - PipelineRole
        - Arn
      Tags:
        version:
          Ref: Version
        stage:
          Ref: Stage
        project:
          Ref: ProjectName
  PipelineDimDate:
    Type: AWS::Glue::Job
    Properties:
      Connections:
        Connections:
        - redshift-connection
      Name:
        Fn::Sub: ${ProjectName}-dim-date-${Stage}
      ExecutionProperty:
        MaxConcurrentRuns: 3
      WorkerType: G.1X
      NumberOfWorkers: 3
      GlueVersion: '3.0'
      Timeout: 2880
      Command:
        Name: glueetl
        PythonVersion: '3'
        ScriptLocation: ../../src/dim_date.py
      DefaultArguments:
        --extra-py-files:
          Fn::Sub: s3://${BucketNameConfig}/lib/${WheelName}-1.0-py3-none-any.whl
        --enable-metrics: ''
        --enable-spark-ui: 'true'
        --spark-event-logs-path:
          Fn::Sub: s3://${BucketNameConfig}/logs/spark
        --enable-s3-parquet-optimized-committer: 'true'
        --user-jars-first: 'true'
        --enable-glue-datacatalog: ''
      Description: Template Spark job
      Role:
        Fn::GetAtt:
        - PipelineRole
        - Arn
      Tags:
        version:
          Ref: Version
        stage:
          Ref: Stage
        project:
          Ref: ProjectName
  GlueAnalyticsDatabaseRaw:
    Type: AWS::Glue::Database
    Properties:
      CatalogId:
        Ref: AWS::AccountId
      DatabaseInput:
        Name:
          Fn::Sub: ${RawDatabase}_${Stage}
        Description:
          Fn::Sub: ${ProjectName} Raw Database
  GlueAnalyticsDatabaseRefined:
    Type: AWS::Glue::Database
    Properties:
      CatalogId:
        Ref: AWS::AccountId
      DatabaseInput:
        Name:
          Fn::Sub: ${RefinedDatabase}_${Stage}
        Description:
          Fn::Sub: ${ProjectName} Refined Database
  GlueAnalyticsCrawlerRaw:
    Type: AWS::Glue::Crawler
    Properties:
      Name:
        Fn::Sub: ${ProjectName}_raw_crawler_${Stage}
      Role:
        Fn::GetAtt:
        - PipelineRole
        - Arn
      DatabaseName:
        Ref: GlueAnalyticsDatabaseRaw
      Targets:
        S3Targets:
        - Path:
            Fn::Sub: s3://${BucketNameRaw}/fire_incidents
      SchemaChangePolicy:
        UpdateBehavior: UPDATE_IN_DATABASE
        DeleteBehavior: LOG
  GlueAnalyticsCrawlerRefined:
    Type: AWS::Glue::Crawler
    Properties:
      Name:
        Fn::Sub: ${ProjectName}_refined_crawler_${Stage}
      Role:
        Fn::GetAtt:
        - PipelineRole
        - Arn
      DatabaseName:
        Ref: GlueAnalyticsDatabaseRefined
      Targets:
        S3Targets:
        - Path:
            Fn::Sub: s3://${BucketNameRefined}/fire_incidents
      SchemaChangePolicy:
        UpdateBehavior: UPDATE_IN_DATABASE
        DeleteBehavior: LOG
  PipelineStepFunction:
    Type: AWS::Serverless::StateMachine
    Properties:
      Role:
        Fn::GetAtt:
        - PipelineRole
        - Arn
      Name:
        Fn::Sub: ${ProjectName}-orchestrator-${Stage}
      DefinitionUri: ../../src/state_machine/definition.asl.json
      DefinitionSubstitutions:
        RawRefined:
          Fn::Sub: ${ProjectName}-raw-refined-${Stage}
        RefinedStg:
          Fn::Sub: ${ProjectName}-refined-stg-${Stage}
        StgDwh:
          Fn::Sub: ${ProjectName}-stg-dwh-${Stage}
